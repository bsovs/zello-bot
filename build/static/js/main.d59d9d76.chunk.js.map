{"version":3,"sources":["serviceWorker.js","ThemeButton.js","Config/config.js","SocketConnection.js","httpFactory.js","Card.js","Helper/UseScript.js","CodeEditor.js","CodeEditorV2.js","App.js","Routes/routes.js","index.js","Styles/logo.svg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","COLORS","ThemeButton","props","toggle","prefersDarkScheme","matches","document","body","classList","theme","contains","setIsDark","isDark","localStorage","setItem","handleChangeComplete","color","hex","$","css","localTheme","setState","themeColor","getItem","matchMedia","currentTheme","this","add","Fragment","className","onClick","aria-label","icon","faSun","faMoon","size","width","colors","onChangeComplete","Component","port","protocol","toString","isLocal","Capacitor","platform","GITHUB_CLIENT_ID","API_URL","socket","openSocket","SocketConnection","isWeb","on","setSocketConnected","socketConnected","role","faExclamationTriangle","http","githubLogin","Promise","resolve","reject","url","type","timeout","success","data","XMLHttpRequest","textStatus","errorThrown","githubCommit","login","JSON","stringify","UseScript","tryTo","code","String","removeChild","script","createElement","innerHTML","consoleOverride","async","instance","appendChild","siblings","remove","ref","el","React","messageOverride","cookie","Cookies","CodeEditorV2","runCode","refs","iframe","contentDocument","documentContents","open","write","close","github","get","res","href","localCode","codeMirrorOptions","lineNumbers","scrollbarStyle","lineWrapping","smartIndent","style","backgroundColor","value","options","mode","onBeforeChange","editor","htmlFor","title","Button","App","home","joinRoom","event","preventDefault","Routes","exact","path","component","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.d59d9d76.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nimport './Styles/theme.css';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst COLORS = {PURPLE:'#b082ff', RED:'#F47373', GREEN:'#37D67A', BLUE:'#2CCCE4', ORANGE:'#FFA500'};\r\n\r\nclass ThemeButton extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tlet localTheme = localStorage.getItem(\"themeColor\");\r\n\t\tthis.state = {\r\n\t\t\tprefersDarkScheme: window.matchMedia(\"(prefers-color-scheme: dark)\"),\r\n\t\t\tcurrentTheme: localStorage.getItem(\"theme\"),\r\n\t\t\tlocalTheme: localTheme,\r\n\t\t\tthemeColor: localTheme ? localTheme : COLORS.PURPLE\r\n\t\t};\r\n\t\tthis.props.setIsDark(\r\n\t\t\t(this.state.prefersDarkScheme.matches) ? true : false\r\n\t\t);\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tif (this.state.currentTheme === \"dark\") {\r\n\t\t\tdocument.body.classList.add(\"dark-theme\");\r\n\t\t\tthis.props.setIsDark(true);\r\n\t\t} else if (this.state.currentTheme === \"light\") {\r\n\t\t\tdocument.body.classList.add(\"light-theme\");\r\n\t\t\tthis.props.setIsDark(false);\r\n\t\t}\r\n\t\tif (this.state.localTheme) {\r\n\t\t\t$('body').css(\"--btn-color\" , this.state.themeColor);\r\n\t\t\t$('body').css(\"--global-color\" , this.state.themeColor);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\tif (this.state.prefersDarkScheme.matches) {\r\n\t\t\tdocument.body.classList.toggle(\"light-theme\");\r\n\t\t\tvar theme = document.body.classList.contains(\"light-theme\")\r\n\t\t\t  ? \"light\"\r\n\t\t\t  : \"dark\";\r\n\t\t} else {\r\n\t\t\tdocument.body.classList.toggle(\"dark-theme\");\r\n\t\t\tvar theme = document.body.classList.contains(\"dark-theme\")\r\n\t\t\t  ? \"dark\"\r\n\t\t\t  : \"light\";\r\n\t\t}\r\n\t\tthis.props.setIsDark(!this.props.isDark);\r\n\t\tlocalStorage.setItem(\"theme\", theme);\r\n\t}\r\n\t\r\n\thandleChangeComplete = (color) => {\r\n\t\tif(color && color.hex){\r\n\t\t\t$('body').css(\"--btn-color\" , color.hex);\r\n\t\t\t$('body').css(\"--global-color\" , color.hex);\r\n\t\t\tif(this.state.localTheme!==color.hex)\r\n\t\t\t\tlocalStorage.setItem(\"themeColor\", color.hex);\r\n\t\t\tthis.setState({ themeColor: color.hex });\r\n\t\t}\r\n\t};\r\n\t\r\n\trender() {\r\n\t\tconst { isDark } = this.props;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<button className=\"btn float-right\" onClick={this.toggle} aria-label={isDark?'Enable Light-Mode':'Enable Dark-Mode'}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={isDark?faSun:faMoon} size=\"1x\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<CirclePicker \r\n\t\t\t\t\tclassName=\"float-right\"\r\n\t\t\t\t\twidth ='220px'\r\n\t\t\t\t\tcolors={[COLORS.PURPLE, COLORS.RED, COLORS.GREEN, COLORS.BLUE, COLORS.ORANGE]}\r\n\t\t\t\t\tcolor={ this.state.themeColor }\r\n\t\t\t\t\tonChangeComplete={ this.handleChangeComplete }\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default ThemeButton;","import openSocket from 'socket.io-client';\r\nimport { Capacitor } from '@capacitor/core';\r\n\r\nlet uri = `${window.location.protocol.toString()}//${window.location.hostname.toString()}`;\r\nconst port = `${window.location.port.toString()}`;\r\n\r\nexport let isLocal = false;\r\n\r\nif(window.location.hostname==='localhost' && Capacitor.platform==='web'){\r\n\turi += `:${port}`;\r\n\tisLocal = true;\r\n}\r\n\r\nconst API_URL_REMOTE = `https://zellobot.herokuapp.com`;\r\nconst API_URL_LOCAL = `http://localhost:8080`;\r\n\r\nexport const GITHUB_CLIENT_ID = isLocal ? 'c8a0302dd23b175757a2' : '817801a99739bd814274';\r\nexport const API_URL = isLocal ? API_URL_LOCAL : API_URL_REMOTE;\r\nexport const socket = openSocket(`${API_URL}`);\r\n","import React, { Component } from \"react\";\r\n\r\nimport {socket} from \"./Config/config\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SocketConnection extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tif(this.props.isWeb){\r\n\t\t\tsocket.on('connect_error', () => {\r\n\t\t\t\tthis.props.setSocketConnected(false).then(() => {\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsocket.on('connected', () => {\r\n\t\t\t\tthis.props.setSocketConnected(true);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { isWeb, socketConnected } = this.props;\r\n\r\n\t\tif (isWeb && !socketConnected){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"alert alert-dismissible  show\" role=\"alert\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faExclamationTriangle} size=\"1x\" />\r\n\t\t\t\t\t<strong>Internet not Connected</strong>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\nexport default SocketConnection;","import * as $ from \"jquery\";\r\nimport {serverUri, isLocal, API_URL, GITHUB_CLIENT_ID} from \"./Config/config\";\r\n\r\nclass httpFactory {\r\n\r\n\tgithubLogin = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/githubLogin`,\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\ttimeout: 10000,\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\treject(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n\tgithubCommit = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/gitcommit`,\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\ttimeout: 10000,\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\tconsole.log(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n\t\r\n\tlogin = () => { \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/token/`,\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\tdata: ``,\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(JSON.stringify({\"success\": data}));\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\tresolve(JSON.stringify({\"error\": errorThrown}));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n}\r\nexport const http = new httpFactory();","import React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nimport logo from './Styles/logo.svg';\r\n\r\nimport ThemeButton from './ThemeButton';\r\nimport SocketConnection from './SocketConnection';\r\nimport { http } from './httpFactory';\r\nimport { socket } from './Config/config';\r\n\r\nclass Card extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = props;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst { value } = this.state;\r\n\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h2>{value}</h2>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport * as $ from \"jquery\";\r\n\r\nconst consoleOverride = `console.log = function(message) {document.getElementById('codeResult').innerHTML += message;}`;\r\n\t\r\nconst messageOverride = `var reply.to = function(message, args) {document.getElementById('codeResult').innerHTML += args;}`;\r\n\r\nexport default class UseScript extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {removeChild:()=>null};\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst script = document.createElement('script');\r\n\t\tscript.type = 'text/javascript';\r\n\t\tscript.innerHTML = consoleOverride + messageOverride + String(this.props.code);\r\n\t\tconsole.log(script);\r\n\t\tscript.async = true;\r\n\t\tthis.instance.appendChild(script);\r\n\t\t$(script).siblings().remove();\r\n\t}\r\n\t\r\n\ttryTo = (code) =>  `try{`+String(code)+`}catch(e){console.log(e)}`;\r\n\r\n\trender() {\r\n\t\treturn(<div ref={el => (this.instance = el)} />)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport Safe from 'react-safe';\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\nimport {isMobile} from 'react-device-detect';\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\n \r\nimport UseScript from './Helper/UseScript';\r\n\r\nimport './Styles/codeEditorStyles.scss';\r\n \r\nconst initialCode = `\r\n\tfunction add(a, b) {\r\n\t  return a + b;\r\n\t}\r\n\tconsole.log(add(1, 2));\r\n\t`;\r\n \r\nclass CodeEditor extends React.Component {\r\n \r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tconst localCode = localStorage.getItem('localCode');\r\n\t\tthis.state = {\r\n\t\t\tcode: (localCode?localCode:initialCode),\r\n\t\t\tresultNum: 0\r\n\t\t}\r\n\t}\r\n \r\n\trunScript = () => {\r\n\t\t/*try{\r\n\t\t\tthis.state.resetScript();\r\n\t\t\tdocument.getElementById('codeResult').innerHTML = '';\r\n\t\t}catch(e){console.log(e)}*/\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({codeResult: this.state.code, resultNum: (prevState.resultNum+1)})\r\n\t\t\t//, ()=>this.setState({resetScript: useScript(consoleOverride(this.state.resultNum) + messageOverride(this.state.resultNum) + this.state.codeResult, 'scriptEditor')})\r\n\t\t);\r\n\t}\r\n \r\n\trender() {\r\n\t\tconst { code, codeResult, resultNum } = this.state;  \r\n\t\t\r\n\t\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Editor\r\n\t\t\t\tclassName='codeBox'\r\n\t\t\t\tvalue={code}\r\n\t\t\t\tonValueChange={code => {this.setState({ code });localStorage.setItem('localCode', code);}}\r\n\t\t\t\thighlight={code => highlight(code, languages.js)}\r\n\t\t\t\tpadding={12}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t  fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n\t\t\t\t  fontSize: 16,\r\n\t\t\t\t  WebkitFilter: this.props.isDark?'invert(100%)':'invert(0%)'\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<span style={{display:'inline-block'}}>\r\n\t\t\t\t<Button variant={this.props.isDark?\"dark\":\"light\"} onClick={this.runScript}>Run</Button> \r\n\t\t\t\t<label htmlFor='codeResult'>Results:</label>\r\n\t\t\t\t<code id='codeResult'>\r\n\t\t\t\t\t<UseScript code={ codeResult } />\r\n\t\t\t\t</code>\r\n\t\t\t</span>\r\n\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default CodeEditor;","import React, { Component } from 'react';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\nimport {isMobile} from 'react-device-detect';\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport { http } from './httpFactory';\r\nimport { API_URL, GITHUB_CLIENT_ID } from './Config/config';\r\n\r\nimport './Styles/codeEditorStyles.scss';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/darcula.css';\r\n\r\nimport 'codemirror/mode/htmlmixed/htmlmixed';\r\nimport 'codemirror/mode/css/css';\r\nimport 'codemirror/mode/javascript/javascript';\r\n\r\nconst initialCode = \r\n`function add(a, b) {\r\n  return a + b;\r\n}\r\nconsole.log(add(1, 2));\r\n`;\r\n\r\nconst tryTo = (code) =>  `try{`+String(code)+`}catch(e){console.log(e)}`;\r\nconst consoleOverride = tryTo(`console.log=(message)=>{document.getElementById('codeResult').innerHTML += message+'</br>';};`);\r\nconst messageOverride = tryTo(`var message={},reply={};reply.to=(message, args)=>{document.getElementById('codeResult').innerHTML += args+'</br>';};`);\r\n\r\nconst cookie = new Cookies();\r\n\r\nclass CodeEditorV2 extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tconst localCode = localStorage.getItem('localCode');\r\n\tthis.state = {\r\n\t  code: (localCode?localCode:initialCode),\r\n\t};\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\tthis.runCode();\r\n  }\r\n\r\n  componentDidMount() {\r\n\tthis.setState({\r\n\t\t\r\n\t});\r\n  }\r\n\r\n  runCode = () => {\r\n\tconst { code } = this.state;\r\n\tconst css = `#codeResult{color:${this.props.isDark?'white':'black'};display: grid;\r\n    place-items: center;text-align:center;}`\r\n\r\n\tlocalStorage.setItem('localCode', code);\r\n\r\n\tconst iframe = this.refs.iframe;\r\n\tconst document = iframe.contentDocument;\r\n\tconst documentContents = `\r\n\t  <!DOCTYPE html>\r\n\t  <html lang=\"en\">\r\n\t  <head>\r\n\t\t<meta charset=\"UTF-8\">\r\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n\t\t<title>Document</title>\r\n\t\t<style>\r\n\t\t  ${css}\r\n\t\t</style>\r\n\t  </head>\r\n\t  <body>\r\n\t\t<code id=\"codeResult\"></code>\r\n\t\t<script type=\"text/javascript\">\r\n\t\t  ${consoleOverride}\r\n\t\t  ${messageOverride}\r\n\t\t  ${code}\r\n\t\t</script>\r\n\t  </body>\r\n\t  </html>\r\n\t`;\r\n\r\n\tdocument.open();\r\n\tdocument.write(documentContents);\r\n\tdocument.close();\r\n  };\r\n\r\n  github = () => {\r\n\tconsole.log(cookie.get('github_code_set'));\r\n\t!cookie.get('github_code_set')\r\n\t\t? window.location.href = `https://github.com/login/oauth/authorize?client_id=${GITHUB_CLIENT_ID}&redirect_uri=${API_URL}/githubCallback&scope=public_repo`\r\n\t\t: http.githubCommit().then(res=>console.log(res)).catch(error=>console.log(error));\r\n  };\r\n\r\n  render() {\r\n\tconst { code } = this.state;\r\n\tconst codeMirrorOptions = {\r\n\t  theme: this.props.isDark?'darcula':'default',\r\n\t  lineNumbers: true,\r\n\t  scrollbarStyle: null,\r\n\t  lineWrapping: true,\r\n\t  smartIndent: true\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<section className=\"playground\">\r\n\t\t\t  <div className=\"code-editor js-code\">\r\n\t\t\t\t<div className=\"editor-header\" style={{color:this.props.isDark?'white':'black',backgroundColor:this.props.isDark?'#121212':'inherit'}}>JavaScript</div>\r\n\t\t\t\t<CodeMirror\r\n\t\t\t\t  value={code}\r\n\t\t\t\t  options={{\r\n\t\t\t\t\tmode: 'javascript',\r\n\t\t\t\t\t...codeMirrorOptions,\r\n\t\t\t\t  }}\r\n\t\t\t\t  onBeforeChange={(editor, data, code) => {\r\n\t\t\t\t\tthis.setState({ code });\r\n\t\t\t\t  }}\r\n\t\t\t\t/>\r\n\t\t\t  </div>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"result\">\r\n\t\t\t  <label htmlFor='result'><p>Output:</p></label>\r\n\t\t\t  <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\r\n\t\t\t</section>\r\n\t\t\t<Button onClick={this.github}>GitHub</Button>\r\n\t\t</React.Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CodeEditorV2;\r\n\r\n\r\n\r\n\t\t","import React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nimport logo from './Styles/logo.svg';\r\nimport './Styles/App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport Card from './Card';\r\nimport ThemeButton from './ThemeButton';\r\nimport SocketConnection from './SocketConnection';\r\nimport { http } from './httpFactory';\r\nimport { socket } from './Config/config';\r\nimport CodeEditor from './CodeEditor';\r\nimport CodeEditorV2 from './CodeEditorV2';\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisDark: false,\r\n\t\t\tisWeb: Capacitor.platform==='web',\r\n\t\t\tsocketConnected: true\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tsocketConnected: (this.state.isWeb && this.state.socketConnected===null) ? false : true\r\n\t\t});\r\n\t\t\r\n\t};\r\n\r\n\t//button functions\r\n\thome = () => {\r\n\t\tthis.setState({\r\n\r\n\t\t});\r\n\t}\r\n\tjoinRoom = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({\r\n\t\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\r\n    const { } = this.state;\r\n\r\n    return(\r\n\t\t<div className=\"App noselect\">\r\n\t\t\t<header>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<SocketConnection\r\n\t\t\t\t\t\tisWeb={this.state.isWeb}\r\n\t\t\t\t\t\tsocketConnected={this.state.socketConnected}\r\n\t\t\t\t\t\tsetSocketConnected={\r\n\t\t\t\t\t\t\t(socketConnected) => {\r\n\t\t\t\t\t\t\t\treturn new Promise((resolve, reject) => { \r\n\t\t\t\t\t\t\t\t\tthis.setState({socketConnected}, resolve()) \r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<ThemeButton \r\n\t\t\t\t\t\tisDark={this.state.isDark}\r\n\t\t\t\t\t\tsetIsDark={(isDark)=>this.setState({isDark})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t\r\n\t\t\t\t<h1>Zello Bot</h1>\r\n\r\n\t\t\t\t<CodeEditorV2 \r\n\t\t\t\t\tisDark={this.state.isDark}\r\n\t\t\t\t/>\r\n\r\n\t\t\t</main>\r\n\t\t\t<footer>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tCreated by Brandon Sovran.\r\n\t\t\t\t</p>\r\n\t\t\t</footer>\r\n      </div>\r\n    );}\r\n}\r\nexport default App;\r\n\r\n/*\r\n\t\t\t\t<SwipeableViews enableMouseEvents>\r\n\t\t\t\t\t<Card value=\"hello world card!\"/>\r\n\t\t\t\t</SwipeableViews>\r\n\t\t\t\t*/\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport App from '../App';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n      <Route exact path='/' component={App}></Route>\r\n    </Switch>\r\n  );\r\n}\r\nexport default Routes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styles/index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport HttpsRedirect from 'react-https-redirect';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Routes from './Routes/routes';\r\n\r\nReactDOM.render(\r\n\t<HttpsRedirect>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Routes />\r\n\t\t</BrowserRouter>\r\n\t</HttpsRedirect>\r\n\t, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}