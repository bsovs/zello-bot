{"version":3,"sources":["serviceWorker.js","ThemeButton.js","Config/config.js","SocketConnection.js","httpFactory.js","App.js","Card.js","HomeButton.js","HomeNav.js","Login.js","CodeEditorV2.js","Bet/BetForm.js","Bet/Bet.js","BetParent.js","Routes/routes.js","index.js","Styles/logo.svg"],"names":["Boolean","window","location","hostname","match","COLORS","ThemeButton","props","toggle","state","prefersDarkScheme","matches","document","body","classList","theme","contains","setIsDark","isDark","localStorage","setItem","handleChangeComplete","color","hex","$","css","localTheme","setState","themeColor","getItem","matchMedia","currentTheme","this","add","Fragment","className","onClick","aria-label","icon","faSun","faMoon","size","width","colors","onChangeComplete","Component","port","protocol","toString","isLocal","Capacitor","platform","GITHUB_CLIENT_ID","API_URL","socket","openSocket","SocketConnection","isWeb","on","setSocketConnected","then","socketConnected","role","faExclamationTriangle","http","betsPage","url","type","timeout","setBet","summoner","wager","isWin","Promise","resolve","reject","success","data","JSON","parse","error","XMLHttpRequest","textStatus","errorThrown","logout","login","stringify","username","password","grant_type","scope","client_id","client_secret","signup","email","fullName","getProfile","JWT","console","log","cookies","Cookies","App","home","joinRoom","event","preventDefault","get","doNotParse","to","href","HomeButton","faHome","variant","Login","handleUsernameChange","target","value","handlePasswordChange","handleEmailChange","handleFullNameChange","a","loading","response","formResponse","userData","catch","remove","json","setJWT","access_token","set","path","maxAge","switchForm","shouldRerender","Form","onSubmit","Label","Group","controlId","Control","placeholder","required","onChange","Check","label","Text","disabled","Spinner","as","animation","isMobile","aria-hidden","full_name","tryTo","code","String","consoleOverride","messageOverride","cookie","BetForm","setSummoner","setWager","setWin","checked","submitForm","bet","finally","id","Button","Bet","err","betSpecs","bet_time","is_win","name","summonerLevel","BetParent","Routes","exact","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.090e3d9a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nimport './Styles/theme.css';\r\n\r\nimport { CirclePicker } from 'react-color';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSun, faMoon } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst COLORS = {PURPLE:'#b082ff', RED:'#F47373', GREEN:'#37D67A', BLUE:'#2CCCE4', ORANGE:'#FFA500'};\r\n\r\nclass ThemeButton extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tlet localTheme = localStorage.getItem(\"themeColor\");\r\n\t\tthis.state = {\r\n\t\t\tprefersDarkScheme: window.matchMedia(\"(prefers-color-scheme: dark)\"),\r\n\t\t\tcurrentTheme: localStorage.getItem(\"theme\"),\r\n\t\t\tlocalTheme: localTheme,\r\n\t\t\tthemeColor: localTheme ? localTheme : COLORS.PURPLE\r\n\t\t};\r\n\t\tthis.props.setIsDark(\r\n\t\t\t(this.state.prefersDarkScheme.matches) ? true : false\r\n\t\t);\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tif (this.state.currentTheme === \"dark\") {\r\n\t\t\tdocument.body.classList.add(\"dark-theme\");\r\n\t\t\tthis.props.setIsDark(true);\r\n\t\t} else if (this.state.currentTheme === \"light\") {\r\n\t\t\tdocument.body.classList.add(\"light-theme\");\r\n\t\t\tthis.props.setIsDark(false);\r\n\t\t}\r\n\t\tif (this.state.localTheme) {\r\n\t\t\t$('body').css(\"--btn-color\" , this.state.themeColor);\r\n\t\t\t$('body').css(\"--global-color\" , this.state.themeColor);\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle = () => {\r\n\t\tif (this.state.prefersDarkScheme.matches) {\r\n\t\t\tdocument.body.classList.toggle(\"light-theme\");\r\n\t\t\tvar theme = document.body.classList.contains(\"light-theme\")\r\n\t\t\t  ? \"light\"\r\n\t\t\t  : \"dark\";\r\n\t\t} else {\r\n\t\t\tdocument.body.classList.toggle(\"dark-theme\");\r\n\t\t\tvar theme = document.body.classList.contains(\"dark-theme\")\r\n\t\t\t  ? \"dark\"\r\n\t\t\t  : \"light\";\r\n\t\t}\r\n\t\tthis.props.setIsDark(!this.props.isDark);\r\n\t\tlocalStorage.setItem(\"theme\", theme);\r\n\t}\r\n\t\r\n\thandleChangeComplete = (color) => {\r\n\t\tif(color && color.hex){\r\n\t\t\t$('body').css(\"--btn-color\" , color.hex);\r\n\t\t\t$('body').css(\"--global-color\" , color.hex);\r\n\t\t\tif(this.state.localTheme!==color.hex)\r\n\t\t\t\tlocalStorage.setItem(\"themeColor\", color.hex);\r\n\t\t\tthis.setState({ themeColor: color.hex });\r\n\t\t}\r\n\t};\r\n\t\r\n\trender() {\r\n\t\tconst { isDark } = this.props;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<button className=\"btn float-right\" onClick={this.toggle} aria-label={isDark?'Enable Light-Mode':'Enable Dark-Mode'}>\r\n\t\t\t\t\t<FontAwesomeIcon icon={isDark?faSun:faMoon} size=\"1x\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<CirclePicker \r\n\t\t\t\t\tclassName=\"float-right\"\r\n\t\t\t\t\twidth ='220px'\r\n\t\t\t\t\tcolors={[COLORS.PURPLE, COLORS.RED, COLORS.GREEN, COLORS.BLUE, COLORS.ORANGE]}\r\n\t\t\t\t\tcolor={ this.state.themeColor }\r\n\t\t\t\t\tonChangeComplete={ this.handleChangeComplete }\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default ThemeButton;","import openSocket from 'socket.io-client';\r\nimport { Capacitor } from '@capacitor/core';\r\n\r\nlet uri = `${window.location.protocol.toString()}//${window.location.hostname.toString()}`;\r\nconst port = `${window.location.port.toString()}`;\r\n\r\nexport let isLocal = false;\r\n\r\nif(window.location.hostname==='localhost' && Capacitor.platform==='web'){\r\n\turi += `:${port}`;\r\n\tisLocal = true;\r\n}\r\n\r\nconst API_URL_REMOTE = `https://zellobot.herokuapp.com`;\r\nconst API_URL_LOCAL = `http://localhost:8080`;\r\n\r\nexport const GITHUB_CLIENT_ID = isLocal ? 'c8a0302dd23b175757a2' : '817801a99739bd814274';\r\nexport const API_URL = isLocal ? API_URL_LOCAL : API_URL_REMOTE;\r\nexport const socket = openSocket(`${API_URL}`);\r\n","import React, { Component } from \"react\";\r\n\r\nimport {socket} from \"./Config/config\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SocketConnection extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\tif(this.props.isWeb){\r\n\t\t\tsocket.on('connect_error', () => {\r\n\t\t\t\tthis.props.setSocketConnected(false).then(() => {\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsocket.on('connected', () => {\r\n\t\t\t\tthis.props.setSocketConnected(true);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { isWeb, socketConnected } = this.props;\r\n\r\n\t\tif (isWeb && !socketConnected){\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"alert alert-dismissible  show\" role=\"alert\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faExclamationTriangle} size=\"1x\" />\r\n\t\t\t\t\t<strong>Internet not Connected</strong>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\nexport default SocketConnection;","import * as $ from \"jquery\";\r\nimport {serverUri, isLocal, API_URL, GITHUB_CLIENT_ID} from \"./Config/config\";\r\n\r\nclass httpFactory {\r\n\r\n\tbetsPage = () => {\r\n\t\t$.ajax({\r\n\t\t\turl: API_URL + `/lol-bets`,\r\n\t\t\ttype: \"GET\",\r\n\t\t\ttimeout: 15000\r\n\t\t});\t\r\n\t}\r\n\r\n\tsetBet = (summoner, wager, isWin) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/lol/setBet?summoner=${summoner}&wager=${wager}&isWin=${isWin}`,\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\ttimeout: 30000,\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(JSON.parse(data));\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\treject(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n\t\r\n\tlogout = () => { \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/logout/`,\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\treject(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n\t\r\n\tlogin = () => { \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/token/`,\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\tdata: ``,\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(JSON.stringify({\"success\": data}));\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\tresolve(JSON.stringify({\"error\": errorThrown}));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n\t\r\n\tlogin = (username, password, grant_type, scope, client_id, client_secret) => { \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/token/`,\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\tdata: `username=${username}&password=${password}`+\r\n\t\t\t\t\t'&grant_type='+(grant_type?grant_type:'')+\r\n\t\t\t\t\t'&scope='+(scope?scope:'')+\r\n\t\t\t\t\t'&client_id='+(client_id?client_id:'')+\r\n\t\t\t\t\t'&client_secret='+(client_secret?client_secret:''),\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(JSON.stringify({\"success\": data}));\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\tresolve(JSON.stringify({\"error\": errorThrown}));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n\t\r\n\tsignup = (username, password, email, fullName) => { \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/signup/?username=${username}&password=${password}&email=${email}&full_name=${fullName}`,\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(JSON.stringify({\"success\": data}));\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\tresolve(JSON.stringify({\"error\": errorThrown}));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n\t\r\n\tgetProfile = (JWT) => { \r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: API_URL + `/users/me/`,\r\n\t\t\t\ttype: \"GET\",\r\n\t\t\t\tsuccess: (data) => {\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t},\r\n\t\t\t\terror: (XMLHttpRequest, textStatus, errorThrown) => {\r\n\t\t\t\t\tconsole.log('Error', errorThrown);\r\n\t\t\t\t\treject(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\t\t\r\n\t};\r\n}\r\nexport const http = new httpFactory();","import React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport {isMobile} from 'react-device-detect';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport logo from './Styles/logo.svg';\r\nimport './Styles/App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport Card from './Card';\r\nimport ThemeButton from './ThemeButton';\r\nimport SocketConnection from './SocketConnection';\r\nimport { http } from './httpFactory';\r\nimport { socket } from './Config/config';\r\n\r\n//Global Vars\r\nconst cookies = new Cookies();\r\n\r\nclass App extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tlet JWT = cookies.get('JWT', {doNotParse: true});\r\n\t\tthis.state = {\r\n\t\t\tisDark: false,\r\n\t\t\tisWeb: Capacitor.platform==='web',\r\n\t\t\tsocketConnected: true,\r\n\t\t\tJWT: JWT!=='' ? JWT : null,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tsocketConnected: (this.state.isWeb && this.state.socketConnected===null) ? false : true\r\n\t\t});\r\n\t\t\r\n\t};\r\n\r\n\t//button functions\r\n\thome = () => {\r\n\t\tthis.setState({\r\n\r\n\t\t});\r\n\t}\r\n\tjoinRoom = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({\r\n\t\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\r\n    const { } = this.state;\r\n\r\n    return(\r\n\t\t<div className=\"App noselect\">\r\n\t\t\t<header>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<SocketConnection\r\n\t\t\t\t\t\tisWeb={this.state.isWeb}\r\n\t\t\t\t\t\tsocketConnected={this.state.socketConnected}\r\n\t\t\t\t\t\tsetSocketConnected={\r\n\t\t\t\t\t\t\t(socketConnected) => {\r\n\t\t\t\t\t\t\t\treturn new Promise((resolve, reject) => { \r\n\t\t\t\t\t\t\t\t\tthis.setState({socketConnected}, resolve()) \r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<ThemeButton \r\n\t\t\t\t\t\tisDark={this.state.isDark}\r\n\t\t\t\t\t\tsetIsDark={(isDark)=>this.setState({isDark})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t\r\n\t\t\t\t<h1>Zello Bot</h1>\r\n\t\t\t\t\r\n\t\t\t\t{this.state.JWT && (\r\n\t\t\t\t\t<Link to=\"/lol-bets\">\r\n\t\t\t\t\t\tLOL BETS\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t)}\r\n\t\t\t\t<a href=\"/api/discord\">\r\n\t\t\t\t\tAuthorize App\r\n\t\t\t\t</a>\r\n\r\n\t\t\t</main>\r\n\t\t\t<footer>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tCreated by Barndo @ ZELLO\r\n\t\t\t\t</p>\r\n\t\t\t</footer>\r\n      </div>\r\n    );}\r\n}\r\nexport default App;\r\n\r\n/*\r\n\t\t\t\t<SwipeableViews enableMouseEvents>\r\n\t\t\t\t\t<Card value=\"hello world card!\"/>\r\n\t\t\t\t</SwipeableViews>\r\n\t\t\t\t\r\n\t\t\t\t<CodeEditorV2 \r\n\t\t\t\t\tisDark={this.state.isDark}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t*/\r\n","import React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nimport logo from './Styles/logo.svg';\r\n\r\nimport ThemeButton from './ThemeButton';\r\nimport SocketConnection from './SocketConnection';\r\nimport { http } from './httpFactory';\r\nimport { socket } from './Config/config';\r\n\r\nclass Card extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = props;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst { value } = this.state;\r\n\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<h2>{value}</h2>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\n\r\nconst HomeButton = props => {\r\n\treturn(\r\n\t\t<Link to=\"/\">\r\n\t\t\t<button className=\"btn btn-border float-left\"><FontAwesomeIcon icon={faHome} size=\"xs\" variant=\"outlined\"/></button>\r\n\t\t</Link>\r\n\t)\r\n}\r\nexport default HomeButton;","import React, { Component } from 'react';\r\n\r\nclass HomeNav extends Component {\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"homePage\">\r\n\t\t\t<form action=\"\" onSubmit={this.joinRoom} className=\"\">\r\n\r\n\t\t\t<label htmlFor=\"roomno\" className=\"roomcodeText\">\r\n\t\t\t\tNAME\r\n\t\t\t</label>\r\n\t\t\t<input id=\"m\" className=\"input\" type=\"text\" required=\"required\"\r\n\t\t\tref=\"name\" name=\"name\" placeholder=\"ENTER NAME\" autoComplete=\"off\" \r\n\t\t\tautoCorrect=\"off\" maxLength=\"16\"/>\r\n\r\n\t\t\t<label htmlFor=\"roomno\" className=\"roomcodeText\">\r\n\t\t\t\tROOM CODE\r\n\t\t\t</label>\r\n\t\t\t<input id=\"m\" className=\"input\" type=\"tel\" required=\"required\" pattern=\"[\\w]{4}\"\r\n\t\t\tref=\"roomno\" name=\"roomno\" placeholder=\"ENTER 4-LETTER CODE\" autoComplete=\"off\" \r\n\t\t\tautoCorrect=\"off\" maxLength=\"4\"/>\r\n\r\n\t\t\t<button className=\"btn min200\" type=\"submit\">Join Room</button>\r\n\t\t\t</form>\r\n\t\t\t<p className=\"or\">or</p>\r\n\t\t\t<button className=\"btn min200\" onClick={this.hostRoom}>Host Game</button>\r\n\t\t\t<button className=\"logout btn min200 btn--loginApp-link\" onClick={this.logout}>Logout</button>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default HomeNav;","//Imports\r\nimport React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport Cookies from 'universal-cookie';\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Styles/App.scss\";\r\nimport \"./Styles/theme.css\";\r\n\r\nimport HomeNav from './HomeNav';\r\nimport HomeButton from './HomeButton';\r\nimport ThemeButton from './ThemeButton';\r\nimport SocketConnection from './SocketConnection';\r\nimport {http} from './httpFactory';\r\n\r\n//Global Vars\r\nconst cookies = new Cookies();\r\n\r\n//Main Class\r\nclass Login extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tlet JWT = cookies.get('JWT', {doNotParse: true});\r\n\t\tthis.state = {\r\n\t\t\tisDark: false,\r\n\t\t\tisWeb: Capacitor.platform==='web',\r\n\t\t\tusername: null,\r\n\t\t\tpassword: null,\r\n\t\t\temail: null,\r\n\t\t\tfullName: null,\r\n\t\t\tJWT: JWT!=='' ? JWT : null,\r\n\t\t\tuserData: null,\r\n\t\t\tsocketConnected: true,\r\n\t\t\tlogin: true\r\n\t\t}\r\n\t};\r\n  \r\n\tcomponentWillMount() {\r\n\t\tthis.setState(this.props.location.state);\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tsocketConnected: (this.state.isWeb && this.state.socketConnected===null) ? false : true\r\n\t\t});\r\n\t};\r\n\r\n\thandleUsernameChange = (event) => {\r\n\t\tthis.setState({username: event.target.value});\r\n\t};\r\n\thandlePasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value});\r\n\t};\r\n\thandleEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value});\r\n\t};\r\n\thandleFullNameChange = (event) => {\r\n\t\tthis.setState({fullName: event.target.value});\r\n\t};\r\n\r\n\r\n\t//button functions\r\n\tlogin = async(event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({loading: true});\r\n\t\thttp.login(this.state.username, this.state.password).then((response)=>{\r\n\t\t\tthis.formResponse(response);\r\n\t\t});\r\n\t};\r\n\tsignup = async(event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({loading: true});\r\n\t\thttp.signup(this.state.username, this.state.password, this.state.email, this.state.fullName).then((response)=>{\r\n\t\t\tthis.formResponse(response);\r\n\t\t});\r\n\t};\r\n\tuserData = async() => {\r\n\t\thttp.getProfile(this.state.JWT).then((response)=>{\r\n\t\t\tthis.setState({userData: response});\r\n\t\t})\r\n\t\t.catch(error=>console.log(error));\r\n\t};\r\n\tlogout = () => {\r\n\t\thttp.logout().then(()=>{\r\n\t\t\tcookies.remove('JWT');\r\n\t\t\tthis.setState({\r\n\t\t\t\tJWT: null,\r\n\t\t\t\tuserData: null,\r\n\t\t\t\tusername: '',\r\n\t\t\t\tpassword: ''\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch((error)=>console.log(error));\r\n\t};\r\n\r\n\tformResponse = (response) => {\r\n\t\tlet json = JSON.parse(response);\r\n\t\tif(json.success){\r\n\t\t\tthis.setJWT(true)\r\n\t\t\tthis.setState({\r\n\t\t\t\tJWT: true,\r\n\t\t\t\tusername: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t\terror: null,\r\n\t\t\t\tloading: false\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tconsole.log(json.error);\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: json.error,\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tloading: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t//set JWT Cookies\r\n\tsetJWT = (access_token) => {\r\n\t\tcookies.set('JWT', access_token, { path: '/', maxAge: 3600});\r\n\t}\r\n\t\r\n\tswitchForm = () => {\r\n\t\tthis.setState({ login: !this.state.login });\r\n\t}\r\n\r\n\t//rerender frame\r\n\tshouldRerender = () => {\r\n\t\tthis.setState(this.state);\r\n\t};\r\n\r\n\trender(){return(\r\n\t\t<div className=\"App noselect\">\r\n\t\t\t<header>\r\n\t\t\t\t<alert>\r\n\t\t\t\t\t<SocketConnection\r\n\t\t\t\t\t\tisWeb={this.state.isWeb}\r\n\t\t\t\t\t\tsocketConnected={this.state.socketConnected}\r\n\t\t\t\t\t\tsetSocketConnected={\r\n\t\t\t\t\t\t\t(socketConnected) => {\r\n\t\t\t\t\t\t\t\treturn new Promise((resolve, reject) => { \r\n\t\t\t\t\t\t\t\t\tthis.setState({socketConnected}, resolve()) \r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</alert>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<HomeButton />\r\n\t\t\t\t\t<ThemeButton \r\n\t\t\t\t\t\tisDark={this.state.isDark}\r\n\t\t\t\t\t\tsetIsDark={(isDark)=>this.setState({isDark})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t{!this.state.JWT && (this.state.login\r\n\t\t\t\t\t?(\r\n\t\t\t\t\t\t<Form onSubmit={this.login}>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{this.state.error && (<Form.Label type=\"invalid\">{this.state.error}</Form.Label>)}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicUsername\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter Username\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.username} onChange={this.handleUsernameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.password} onChange={this.handlePasswordChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicCheckbox\">\r\n\t\t\t\t\t\t\t\t<Form.Check type=\"checkbox\" label=\"Remeber Me\" />\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\tWe'll never share your info with anyone else.\r\n\t\t\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-border\" \r\n\t\t\t\t\t\t\t\tvariant=\"primary\" \r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={this.state.loading}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{this.state.loading\r\n\t\t\t\t\t\t\t\t?(<div className=\"loading\">\r\n\t\t\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\t\t  as=\"span\"\r\n\t\t\t\t\t\t\t\t\t  animation=\"border\"\r\n\t\t\t\t\t\t\t\t\t  size={isMobile ? \"1x\" : \"sm\"}\r\n\t\t\t\t\t\t\t\t\t  role=\"status\"\r\n\t\t\t\t\t\t\t\t\t  aria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t\t: 'Login'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Form>\t\r\n\t\t\t\t\t)\r\n\t\t\t\t\t:(\r\n\t\t\t\t\t\t<Form onSubmit={this.signup}>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{this.state.error && (<Form.Label type=\"invalid\">{this.state.error}</Form.Label>)}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicUsername\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter Username\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.username} onChange={this.handleUsernameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.password} onChange={this.handlePasswordChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter Email\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.email} onChange={this.handleEmailChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicFullName\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter Full Name\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.fullName} onChange={this.handleFullNameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicCheckbox\">\r\n\t\t\t\t\t\t\t\t<Form.Check type=\"checkbox\" label=\"Remeber Me\" />\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\tWe'll never share your info with anyone else.\r\n\t\t\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<button className=\"btn btn-border\" \r\n\t\t\t\t\t\t\t\tvariant=\"primary\" \r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={this.state.loading}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{this.state.loading\r\n\t\t\t\t\t\t\t\t?(<div className=\"loading\">\r\n\t\t\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\t\t  as=\"span\"\r\n\t\t\t\t\t\t\t\t\t  animation=\"border\"\r\n\t\t\t\t\t\t\t\t\t  size={isMobile ? \"1x\" : \"sm\"}\r\n\t\t\t\t\t\t\t\t\t  role=\"status\"\r\n\t\t\t\t\t\t\t\t\t  aria-hidden=\"true\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t\t: 'Signup'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Form>\t\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t{!this.state.JWT && (\r\n\t\t\t\t\t<button className=\"btn\" \r\n\t\t\t\t\t\tvariant=\"primary\" \r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tdisabled={this.state.loading}\r\n\t\t\t\t\t\tonClick={this.switchForm}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.login ? 'Signup' : 'Login'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{this.state.JWT &&\r\n\t\t\t\t\t(<React.Fragment>\r\n\t\t\t\t\t\t<button className=\"btn btn-border\" \r\n\t\t\t\t\t\t\tvariant=\"primary\" \r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={this.userData}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tView Profile\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{this.state.userData && (\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t{this.state.userData.username}\r\n\t\t\t\t\t\t\t\t{this.state.userData.email}\r\n\t\t\t\t\t\t\t\t{this.state.userData.full_name}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<button className=\"btn btn-border\" \r\n\t\t\t\t\t\t\tvariant=\"primary\" \r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={this.logout}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</React.Fragment>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</main>\r\n\t\t\t<footer>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tCreated by Brandon Sovran.\r\n\t\t\t\t</p>\r\n\t\t\t</footer>\r\n      </div>\r\n    );}\r\n}\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { highlight, languages } from 'prismjs/components/prism-core';\r\nimport 'prismjs/components/prism-clike';\r\nimport 'prismjs/components/prism-javascript';\r\nimport {isMobile} from 'react-device-detect';\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport { http } from './httpFactory';\r\nimport { API_URL, GITHUB_CLIENT_ID } from './Config/config';\r\n\r\nimport './Styles/codeEditorStyles.scss';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/darcula.css';\r\n\r\nimport 'codemirror/mode/htmlmixed/htmlmixed';\r\nimport 'codemirror/mode/css/css';\r\nimport 'codemirror/mode/javascript/javascript';\r\n\r\nconst initialCode = \r\n`function add(a, b) {\r\n  return a + b;\r\n}\r\nconsole.log(add(1, 2));\r\n`;\r\n\r\nconst tryTo = (code) =>  `try{`+String(code)+`}catch(e){console.log(e)}`;\r\nconst consoleOverride = tryTo(`console.log=(message)=>{document.getElementById('codeResult').innerHTML += message+'</br>';};`);\r\nconst messageOverride = tryTo(`var message={},reply={};reply.to=(message, args)=>{document.getElementById('codeResult').innerHTML += args+'</br>';};`);\r\n\r\nconst cookie = new Cookies();\r\n\r\nclass CodeEditorV2 extends Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tconst localCode = localStorage.getItem('localCode');\r\n\tthis.state = {\r\n\t  code: (localCode?localCode:initialCode),\r\n\t};\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\tthis.runCode();\r\n  }\r\n\r\n  componentDidMount() {\r\n\tthis.setState({\r\n\t\t\r\n\t});\r\n  }\r\n\r\n  runCode = () => {\r\n\tconst { code } = this.state;\r\n\tconst css = `#codeResult{color:${this.props.isDark?'white':'black'};display: grid;\r\n    place-items: center;text-align:center;}`\r\n\r\n\tlocalStorage.setItem('localCode', code);\r\n\r\n\tconst iframe = this.refs.iframe;\r\n\tconst document = iframe.contentDocument;\r\n\tdocument.documentElement.innerHTML = \"\";\r\n\tconst documentContents = `\r\n\t  <!DOCTYPE html>\r\n\t  <html lang=\"en\">\r\n\t  <head>\r\n\t\t<meta charset=\"UTF-8\">\r\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n\t\t<title>Document</title>\r\n\t\t<style>\r\n\t\t  ${css}\r\n\t\t</style>\r\n\t  </head>\r\n\t  <body>\r\n\t\t<code id=\"codeResult\"></code>\r\n\t\t<script type=\"text/javascript\">\r\n\t\t  ${consoleOverride}\r\n\t\t  ${messageOverride}\r\n\t\t  ${code}\r\n\t\t</script>\r\n\t  </body>\r\n\t  </html>\r\n\t`;\r\n\r\n\tdocument.open();\r\n\tdocument.write(documentContents);\r\n\tdocument.close();\r\n  };\r\n\r\n  github = () => {\r\n\tconsole.log(cookie.get('github_code_set'));\r\n\t!cookie.get('github_code_set')\r\n\t\t? window.location.href = `https://github.com/login/oauth/authorize?client_id=${GITHUB_CLIENT_ID}&redirect_uri=${API_URL}/githubCallback&scope=public_repo%20repo`\r\n\t\t: http.githubCommit().then(res=>console.log(res)).catch(error=>console.log(error));\r\n  };\r\n\r\n  render() {\r\n\tconst { code } = this.state;\r\n\tconst codeMirrorOptions = {\r\n\t  theme: this.props.isDark?'darcula':'default',\r\n\t  lineNumbers: true,\r\n\t  scrollbarStyle: null,\r\n\t  lineWrapping: true,\r\n\t  smartIndent: true\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<section className=\"playground\">\r\n\t\t\t  <div className=\"code-editor js-code\">\r\n\t\t\t\t<div className=\"editor-header\" style={{color:this.props.isDark?'white':'black',backgroundColor:this.props.isDark?'#121212':'inherit'}}>JavaScript</div>\r\n\t\t\t\t<CodeMirror\r\n\t\t\t\t  value={code}\r\n\t\t\t\t  options={{\r\n\t\t\t\t\tmode: 'javascript',\r\n\t\t\t\t\t...codeMirrorOptions,\r\n\t\t\t\t  }}\r\n\t\t\t\t  onBeforeChange={(editor, data, code) => {\r\n\t\t\t\t\tthis.setState({ code });\r\n\t\t\t\t  }}\r\n\t\t\t\t/>\r\n\t\t\t  </div>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"result\">\r\n\t\t\t  <label htmlFor='result'><p>Output:</p></label>\r\n\t\t\t  <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\r\n\t\t\t</section>\r\n\t\t\t<Button onClick={this.github}>GitHub</Button>\r\n\t\t</React.Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CodeEditorV2;\r\n\r\n\r\n\r\n\t\t","import React, { Component } from \"react\";\r\n\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nclass BetForm extends Component {\t\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsummoner: '',\r\n\t\t\twager: 20,\r\n\t\t\tloading: false,\r\n\t\t\tisWin: false\r\n\t\t};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\t\r\n\t}\r\n\t\r\n\tsetSummoner = (event) => {\r\n\t\tthis.setState({summoner: event.target.value});\r\n\t}\r\n\t\r\n\tsetWager = (event) => {\r\n\t\tthis.setState({wager: event.target.value});\r\n\t}\r\n\t\r\n\tsetWin = (event) => {\r\n\t\tconsole.log(this.state.isWin);\r\n\t\tthis.setState({isWin: event.target.checked });\r\n\t}\r\n\t\r\n\tsubmitForm = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({loading: true});\r\n\t\tthis.props.bet(this.state.summoner, this.state.wager, this.state.isWin).finally(()=>this.setState({loading: false}));\r\n\t}\r\n\r\n\trender(){\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t{this.state.loading\r\n\t\t\t?(\r\n\t\t\t<div className=\"loading\">\r\n\t\t\t\t<Spinner\r\n\t\t\t\t  id=\"spinner\"\r\n\t\t\t\t  as=\"span\"\r\n\t\t\t\t  animation=\"border\"\r\n\t\t\t\t  size={isMobile ? \"1x\" : \"sm\"}\r\n\t\t\t\t  role=\"status\"\r\n\t\t\t\t  aria-hidden=\"true\"\r\n\t\t\t\t/>\r\n\t\t\t\t<p>This may take ~30sec</p>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\t:(\r\n\t\t\t<Form onSubmit={this.submitForm}>\r\n\t\t\t\t<Form.Group controlId=\"formBasicText\">\r\n\t\t\t\t\t<Form.Label>Summoner Name</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Enter Summoner Name\" required=\"required\" onChange={this.setSummoner}  />\r\n\t\t\t\t</Form.Group> \r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label>Z-Bucks Wager</Form.Label>\r\n\t\t\t\t\t<Form.Control type=\"range\" onChange={this.setWager} value={this.state.wager} />\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\tAmount: <Form.Control type=\"number\" onChange={this.setWager} value={this.state.wager}/>\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t<Form.Check \r\n\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\tid='default-checkbox'\r\n\t\t\t\t\t\tlabel='Will Win'\r\n\t\t\t\t\t\tonChange={this.setWin}\r\n\t\t\t\t\t\tchecked={this.state.isWin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Button className=\"btn-border\" variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\tPlace Bet\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\tWe'll never share your data with anyone else.\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t</Form>\r\n\t\t)}\r\n\t\t</React.Fragment>\r\n\t)}\r\n}export default BetForm;","import React, { Component } from \"react\";\r\n\r\nimport {http} from \"../httpFactory\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\n\r\nimport BetForm from './BetForm';\r\n\r\nclass Bet extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\t//this.bet('sohozang');\r\n\t}\r\n\t\r\n\tbet = (summoner, wager, isWin) => {\r\n\t\treturn http.setBet(summoner, wager, isWin).then(summoner=>this.setState({summoner})).catch(err=>err);\r\n\t};\r\n\t\r\n\trender() {\r\n\t\tconst { } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\r\n\t\t\t{this.state.summoner\r\n\t\t\t\t?(<React.Fragment>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Bet Time: { this.state.summoner.betSpecs.bet_time }</li>\r\n\t\t\t\t\t\t<li>Wager: { this.state.summoner.betSpecs.wager }</li>\r\n\t\t\t\t\t\t<li>Win/Loss: { this.state.summoner.betSpecs.is_win ? 'Win' : 'Loss' }</li>\r\n\t\t\t\t\t\t<li>Summoner: { this.state.summoner.name }</li>\r\n\t\t\t\t\t\t<li>Level: { this.state.summoner.summonerLevel }</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<Button className=\"btn-border\" variant=\"primary\" onClick={()=>this.setState({summoner: null})}>\r\n\t\t\t\t\t\tPlace Bet\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</React.Fragment>)\r\n\t\t\t\t:(\r\n\t\t\t\t\t<BetForm bet={this.bet} />\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Bet;","import React, { Component } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport { Capacitor } from '@capacitor/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Spinner, Form, Input } from 'react-bootstrap';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nimport logo from './Styles/logo.svg';\r\nimport './Styles/App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport Card from './Card';\r\nimport ThemeButton from './ThemeButton';\r\nimport SocketConnection from './SocketConnection';\r\nimport { http } from './httpFactory';\r\nimport { socket } from './Config/config';\r\nimport CodeEditorV2 from './CodeEditorV2';\r\nimport Bet from './Bet/Bet';\r\n\r\nclass BetParent extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisDark: false,\r\n\t\t\tisWeb: Capacitor.platform==='web',\r\n\t\t\tsocketConnected: true\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\tsocketConnected: (this.state.isWeb && this.state.socketConnected===null) ? false : true\r\n\t\t});\r\n\t\t\r\n\t};\r\n\r\n\t//button functions\r\n\thome = () => {\r\n\t\tthis.setState({\r\n\r\n\t\t});\r\n\t}\r\n\tjoinRoom = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({\r\n\t\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\r\n    const { } = this.state;\r\n\r\n    return(\r\n\t\t<div className=\"App noselect\">\r\n\t\t\t<header>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<SocketConnection\r\n\t\t\t\t\t\tisWeb={this.state.isWeb}\r\n\t\t\t\t\t\tsocketConnected={this.state.socketConnected}\r\n\t\t\t\t\t\tsetSocketConnected={\r\n\t\t\t\t\t\t\t(socketConnected) => {\r\n\t\t\t\t\t\t\t\treturn new Promise((resolve, reject) => { \r\n\t\t\t\t\t\t\t\t\tthis.setState({socketConnected}, resolve()) \r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<ThemeButton \r\n\t\t\t\t\t\tisDark={this.state.isDark}\r\n\t\t\t\t\t\tsetIsDark={(isDark)=>this.setState({isDark})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</header>\r\n\t\t\t<main>\r\n\t\t\t\t\r\n\t\t\t\t<h1>Zello Bets</h1>\r\n\r\n\t\t\t\t<Bet />\r\n\r\n\t\t\t</main>\r\n\t\t\t<footer>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tBank of Zello co.\r\n\t\t\t\t</p>\r\n\t\t\t</footer>\r\n      </div>\r\n    );}\r\n}\r\nexport default BetParent;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport App from '../App';\r\nimport Login from '../Login';\r\nimport BetParent from '../BetParent';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n      <Route exact path='/' component={App}></Route>\r\n\t  <Route exact path='/login' component={Login}></Route>\r\n\t  <Route exact path='/lol-bets' component={BetParent}></Route>\r\n    </Switch>\r\n  );\r\n}\r\nexport default Routes;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Styles/index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport HttpsRedirect from 'react-https-redirect';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Routes from './Routes/routes';\r\n\r\nReactDOM.render(\r\n\t<HttpsRedirect>\r\n\t\t<BrowserRouter>\r\n\t\t\t<Routes />\r\n\t\t</BrowserRouter>\r\n\t</HttpsRedirect>\r\n\t, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}